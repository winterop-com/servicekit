services:
    orchestrator:
        build:
            context: ../..
            dockerfile: examples/registration/Dockerfile
            target: orchestrator
        ports:
            - "9000:9000"
        environment:
            LOG_FORMAT: json
            LOG_LEVEL: INFO
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "python",
                    "-c",
                    "import urllib.request; urllib.request.urlopen('http://localhost:9000/health').read()",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    svca:
        build:
            context: ../..
            dockerfile: examples/registration/Dockerfile
            target: runtime
        ports:
            - "8000:8000"
        environment:
            LOG_FORMAT: json
            LOG_LEVEL: INFO
            SERVICEKIT_ORCHESTRATOR_URL: http://orchestrator:9000/services/$$register
        depends_on:
            orchestrator:
                condition: service_healthy
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "python",
                    "-c",
                    "import urllib.request; urllib.request.urlopen('http://localhost:8000/health').read()",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    svcb:
        build:
            context: ../..
            dockerfile: examples/registration/Dockerfile
            target: runtime
        ports:
            - "8001:8000"
        environment:
            LOG_FORMAT: json
            LOG_LEVEL: INFO
            SERVICEKIT_ORCHESTRATOR_URL: http://orchestrator:9000/services/$$register
        depends_on:
            orchestrator:
                condition: service_healthy
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD",
                    "python",
                    "-c",
                    "import urllib.request; urllib.request.urlopen('http://localhost:8000/health').read()",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
